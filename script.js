const translations = {
    ru: {
        headerTitle: "–¢–∞–Ω–¥–µ–º –ü—Ä–∏–Ω—Ç",
        sendingTitle: "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω",
        widthLabel: "–®–∏—Ä–∏–Ω–∞ (–º):",
        heightLabel: "–í—ã—Å–æ—Ç–∞ (–º):",
        materialLabel: "–ú–∞—Ç–µ—Ä–∏–∞–ª:",
        densityLabel: "–ü–ª–æ—Ç–Ω–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏:",
        calculateBtn: "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å",
        sendBtn: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑",
        result: "–¶–µ–Ω–∞: ",
        placeholderName: "–í–≤–µ–¥–∏—Ç–µ –∏–º—è",
        placeholderPhone: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
    },
    am: {
        headerTitle: "’è’°’∂’§’•’¥ ’ä÷Ä’´’∂’ø",
        sendingTitle: "‘≥’´’∂’® ’∞’°’∑’æ’°÷Ä’Ø’•’¨’∏÷Ç ’°’º’°÷Ä÷Ñ",
        widthLabel: "‘º’°’µ’∂’∏÷Ç’©’µ’∏÷Ç’∂ (’¥):",
        heightLabel: "‘≤’°÷Ä’±÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ (’¥):",
        materialLabel: "’Ñ’°’ø’•÷Ä’´’°’¨:",
        densityLabel: "’è’∫’¥’°’∂ ’≠’ø’∏÷Ç’©’µ’∏÷Ç’∂’®:",
        calculateBtn: "’Ä’°’∑’æ’•’¨",
        sendBtn: "‘≥÷Ä’°’∂÷Å’•÷Ñ ’±’•÷Ä ’∫’°’ø’æ’•÷Ä’®",
        result: "‘≥’´’∂’®: ",
        placeholderName: "’Ñ’∏÷Ç’ø÷Ñ’°’£÷Ä’•÷Ñ ’°’∂’∏÷Ç’∂’®",
        placeholderPhone: "’Ñ’∏÷Ç’ø÷Ñ’°’£÷Ä’•÷Ñ ’∞’•’º’°’≠’∏’Ω’°’∞’°’¥’°÷Ä’®",
    },
    en: {
        headerTitle: "Tandem Print",
        sendingTitle: "Price Calculator",
        widthLabel: "Width (m):",
        heightLabel: "Height (m):",
        materialLabel: "Material:",
        densityLabel: "Printing density:",
        calculateBtn: "Calculate",
        sendBtn: "Register Order",
        result: "Price: ",
        placeholderName: "Enter name",
        placeholderPhone: "Enter phone number",
    },
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞
function changeLanguage(language) {
    document.getElementById("headerTitle").innerText = translations[language].headerTitle;
    document.getElementById("sendingTitle").innerText = translations[language].sendingTitle;
    document.getElementById("widthLabel").innerText = translations[language].widthLabel;
    document.getElementById("heightLabel").innerText = translations[language].heightLabel;
    document.getElementById("materialLabel").innerText = translations[language].materialLabel;
    document.getElementById("densityLabel").innerText = translations[language].densityLabel;
    document.getElementById("calculateBtn").innerText = translations[language].calculateBtn;
    document.getElementById("sendBtn").innerText = translations[language].sendBtn;
    document.getElementById("result").innerText = translations[language].result;
    document.getElementById("name").placeholder = translations[language].placeholderName;
    document.getElementById("phone").placeholder = translations[language].placeholderPhone;
    document.title = translations[language].sendingTitle;
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
changeLanguage('ru'); // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
function calculatePrice() {
    const width = parseFloat(document.getElementById('width').value);
    const height = parseFloat(document.getElementById('height').value);
    const materialCost = parseFloat(document.getElementById('material').value);
    const densityCost = parseFloat(document.getElementById('density').value);

    if (isNaN(width) || isNaN(height)) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã!");
        return;
    }

    const area = width * height;
    let basePrice = area * materialCost;
    basePrice += densityCost;

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–π (–Ω–µ –º–µ–Ω—è–µ–º –µ–µ –≤–Ω–∏–∑)
    let minPrice = basePrice;

    // –¶–µ–Ω–∞ –¥–æ ‚Äî –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ (+10% –æ—Ç –±–∞–∑–æ–≤–æ–π —Ü–µ–Ω—ã)
    let maxPrice = basePrice + (basePrice * 0.1);

    // –û–∫—Ä—É–≥–ª—è–µ–º –æ–±–µ —Ü–µ–Ω—ã
    minPrice = Math.round(minPrice);
    maxPrice = Math.round(maxPrice);

    const resultText = `–û—Ç ${minPrice} –¥–æ ${maxPrice} –¥—Ä–∞–º.`;
    document.getElementById('result').innerText = resultText;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Telegram
function sendOrder() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª–µ–π
    const width = parseFloat(document.getElementById('width').value);
    const height = parseFloat(document.getElementById('height').value);
    const materialCost = parseFloat(document.getElementById('material').value);
    const densityCost = parseFloat(document.getElementById('density').value);
    const material = document.getElementById('material').selectedOptions[0].text;
    const density = document.getElementById('density').selectedOptions[0].text;
    const name = document.getElementById('name').value.trim();
    const phone = document.getElementById('phone').value.trim();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if (!name || !phone) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
    if (isNaN(width) || isNaN(height) || width <= 0 || height <= 0) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã!");
        return;
    }

    // –†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã, –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω
    let resultPrice = document.getElementById('result').innerText.trim();
    if (!resultPrice || resultPrice === "–¶–µ–Ω–∞:" || resultPrice === "") {
        const area = width * height;
        let basePrice = area * materialCost;
        basePrice += densityCost;

        const minPrice = Math.round(basePrice);
        const maxPrice = Math.round(basePrice + (basePrice * 0.1));
        resultPrice = `–û—Ç ${minPrice} –¥–æ ${maxPrice} –¥—Ä–∞–º.`;

        // –û–±–Ω–æ–≤–ª—è–µ–º #result –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏
        document.getElementById('result').innerText = `–¶–µ–Ω–∞: ${resultPrice}`;
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è (GMT+4)
    const now = new Date();
    const offsetHours = 4; // GMT+4
    const gmtPlus4 = new Date(now.getTime() + offsetHours * 60 * 60 * 1000);
    const orderDate = `${gmtPlus4.toLocaleDateString()} ${gmtPlus4.getHours()}:${gmtPlus4.getMinutes().toString().padStart(2, '0')}`;

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const message = `
    –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:
    \nüë§–ò–º—è: ${name}
    \nüìû–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
    \nüìê–†–∞–∑–º–µ—Ä—ã: ${width} x ${height} –º
    \nüìÑ–ú–∞—Ç–µ—Ä–∏–∞–ª: ${material}
    \nüìà–ü–ª–æ—Ç–Ω–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏: ${density}
    \nüí∞–¶–µ–Ω–∞: ${resultPrice}
    \nüìÖ–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: ${orderDate}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    const token = '7475133843:AAGdtr_FAPQmn772HJOyU1gYRMK8hYJsoeY';
    const chatId = '878014553';
    const apiUrl = `https://api.telegram.org/bot${token}/sendMessage`;

    const url = `${apiUrl}?chat_id=${chatId}&text=${encodeURIComponent(message)}`;

    fetch(url)
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                alert("–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
                location.reload(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            } else {
                alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞.");
            }
        })
        .catch(error => {
            alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞.");
        });
}
